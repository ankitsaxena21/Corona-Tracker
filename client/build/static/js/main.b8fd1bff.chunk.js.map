{"version":3,"sources":["contexts/AppReducer.js","contexts/GlobalState.js","components/Autosuggest.js","components/Searchbar.js","components/Confirmed.js","components/Deaths.js","components/Recovered.js","components/Tested.js","components/Graph.js","components/Header.js","components/Statename.js","App.js","index.js"],"names":["state","action","type","Transactions","payload","State","error","buttonclicked","initialstate","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","states","a","Axios","get","res1","data","Provider","value","GetData","Buttonclick","isbutton","statedata","stateentered","Autosuggestwidget","useState","setvalue","suggestions","setsuggestions","useContext","languages","setlanguages","obj1","map","ele","Object","values","hasOwnProperty","useEffect","result","keys","language","name","shift","fetchdata","inputProps","placeholder","onChange","event","newValue","id","onSuggestionsFetchRequested","value1","inputValue","trim","toLowerCase","inputLength","length","filter","lang","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","method","onClick","button","Searchbar","color","height","width","Confirmed","props","i","reverse","key","States","total","pv","parseInt","newdateconfirmed","datagather1","olddateconfirmed","datagather2","style","toString","replace","dataKey","stroke","strokeWidth","dot","Deaths","newdatedeaths","olddatedeaths","Recovered","newdaterecovered","olddaterecovered","Math","abs","Tested","newdatetested","olddatetested","Graph","getCountrydata","Header","href","src","moment","createdAt","format","decider2","Statename","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8fd1bff.chunk.js","sourcesContent":["export default (state,action) => {\n    switch(action.type)\n    {\n        case 'STATE_DATA':\n        return {\n            ...state,\n            Transactions:action.payload[0],\n            State:action.payload[1]\n        }\n        case 'ERROR':\n            return{\n\n                ...state,\n                error:action.payload\n            }\n            case 'BUTTON-CLICKED':\n                return{\n                    ...state,\n                    buttonclicked:true,\n                    State:action.payload\n                }\n        default:\n            return state\n    }\n}\n","import React,{createContext,useReducer} from 'react'\nimport AppReducer from './AppReducer'\nimport Axios from 'axios'\nconst initialstate={\n    Transactions:{},\n    buttonclicked:false,\n    State:null\n}\nexport const GlobalContext=createContext(initialstate)\nexport const GlobalProvider=({children})=>{\n   const[state,dispatch]=useReducer(AppReducer,initialstate)\n    function Buttonclick(value)\n   {\n       try {\n           dispatch({\n               type:\"BUTTON-CLICKED\",\n               payload:value\n           })\n           return state.buttonclicked\n       } catch (error) {\n           dispatch({\n        type:'ERROR',\n        payload:error\n    })\n       }\n   }\n   async function GetData(states){\n   try {\n    const res1=await Axios.get('/api/v1/data')\n\n    //const res1=await Axios.get(`/api/v1/data/latest/${states}`)\n     dispatch({\n         type:\"STATE_DATA\",\n         payload:[res1.data,states]\n     })\n   } catch (error) {\n    dispatch({\n        type:'ERROR',\n        payload:error\n    })\n   }\n   }\n   return(\n     <GlobalContext.Provider value={{\n         GetData,\n         Buttonclick,\n         isbutton:state.buttonclicked,\n         statedata:state.Transactions,\n         stateentered:state.State\n     }}>{children}</GlobalContext.Provider>\n   )\n}","import React,{useState,useContext,useEffect} from 'react'\nimport Autosuggest from 'react-autosuggest'\nimport {GlobalContext} from '../contexts/GlobalState'\nimport Axios from 'axios'\nexport const Autosuggestwidget = () => {\n  const [value,setvalue]=useState('')\n      const [suggestions,setsuggestions]=useState([])\n  \n   var states\n    const {GetData,Buttonclick,isbutton}=useContext(GlobalContext)\n    const[languages,setlanguages]=useState([])\n      useEffect(() => {\n        const fetchdata=async()=>\n        {\n        const result=await Axios(\n          'https://api.covid19india.org/state_district_wise.json',\n        );\n        states=Object.keys(result.data)\n       const language=states.map(ele=>{\n           return {name:ele}\n       })\n       language.shift() \n       setlanguages(language)  \n        }\n        fetchdata()\n      }, []);\n      \n     async function button(value){\n       var obj1={}\nvar t1=languages.map(ele=>{\n  obj1[Object.values(ele)[0]]=true\n})\n//await GetData(value)\n        if(obj1.hasOwnProperty(value))await Buttonclick(value)\n        setvalue('')\n      }\n      // Teach Autosuggest how to calculate suggestions for any given input value.\n      const getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n      \n        return inputLength === 0 ? [] : languages.filter(lang =>\n          lang.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n      };\n     \n      // When suggestion is clicked, Autosuggest needs to populate the input\n      // based on the clicked suggestion. Teach Autosuggest how to calculate the\n      // input value for every given suggestion.\n      const getSuggestionValue = suggestion => suggestion.name;\n      const onSuggestionSelected=(event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method })=>{\n      setvalue(suggestion.name)\n      \n    }\n      \n\n      // Use your imagination to render suggestions.\n      const renderSuggestion = suggestion => (\n        <div>\n          {suggestion.name}\n        </div>\n      );\n        const onChange = (event, { newValue }) => {\n         setvalue(newValue)\n        };\n      \n        // Autosuggest will call this function every time you need to update suggestions.\n        // You already implemented this logic above, so just use it.\n        const onSuggestionsFetchRequested = ({ value }) => {\n          const value1=getSuggestions(value)\n            setsuggestions(value1)\n    \n        };\n      \n        // Autosuggest will call this function every time you need to clear suggestions.\n        const onSuggestionsClearRequested = () => {\n            setsuggestions([])\n        };\n      \n      \n          // Autosuggest will pass through all these props to the input.\n          const inputProps = {\n            placeholder: 'Search for a State or City',\n            value,\n            onChange: onChange\n          };\n      \n          // Finally, render it!\n          return (\n              \n             <div id=\"Search\"> \n\n             <div id=\"Search-container\">\n            <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={onSuggestionsClearRequested}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={renderSuggestion}\n              inputProps={inputProps}\n              onSuggestionSelected={onSuggestionSelected}\n            />\n\n            \n            </div>\n            <div id=\"Button\">\n                              <button id=\"button1\" onClick={()=>{button(value)}}>Submit</button>\n\n          </div>\n          </div>\n          );\n\n}","import React,{useContext} from 'react';\nimport {Autosuggestwidget} from './Autosuggest'\nimport {GlobalContext} from '../contexts/GlobalState'\nimport ReactLoading from 'react-loading';\nexport const Searchbar = () => {\n    const {statedata,isbutton,GetData,stateentered,buttonclicked}=useContext(GlobalContext)\n\n    function decider1()\n    {\n        if(!stateentered)return(<div><ReactLoading type=\"spin\" color=\"#c9c9c9\" height=\"100%\" width=\"100%\" /></div>)\n        else{\n            return (\n                <Autosuggestwidget />\n              \n            )\n        }\n    }\n    return decider1()\n}\n","import React,{useContext} from 'react';\nimport {GlobalContext} from '../contexts/GlobalState'\nimport AnimatedNumber from '@jhonnold/react-animated-number';\nimport {\n  LineChart, Line} from 'recharts';\nvar data = [\n  ]\n\nexport const Confirmed = (props) => {\n  const {statedata,stateentered}=useContext(GlobalContext)\n  var i=0\n  data=[...statedata].reverse().map(ele=>{\n    if(i%2==0)\n    {\n    for(var key in ele.States[stateentered].total)\n    {\n      if(key=='confirmed')\n      {\n      return {pv:parseInt( ele.States[stateentered].total[key])}\n      }\n    }\n  }\n  i++\n  })\n  function datagather1()\n  {\n    for(var key in statedata[0].States[stateentered].total)\n    {\n      if(key=='confirmed')\n      {\n      return parseInt( statedata[0].States[stateentered].total[key])\n      }\n    }\n  }\n  function datagather2()\n  {\n    for(var key in statedata[1].States[stateentered].total)\n    {\n      if(key=='confirmed')\n      {\n      return parseInt(statedata[1].States[stateentered].total[key])\n      }\n    }\n  }\n  var newdateconfirmed=datagather1()\n  var olddateconfirmed=datagather2()\n    return (\n        <div id=\"Confirmed\">\n          <div id=\"confirmed-text\"><h2 style={{color:'#E61C1C'}}>Confirmed</h2></div>\n          <div><h4 style={{color:'#E61C1C'}}>↑ {(newdateconfirmed-olddateconfirmed).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h4></div>\n          <div><h1  style={{color:'#E61C1C'}}>{newdateconfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h1></div>\n            <LineChart width={200} height={100} data={data}>\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#db0000\" strokeWidth={2} dot={false} />\n      </LineChart>\n        </div>\n    )\n}\n\n\n\n\n","import React,{useContext} from 'react';\nimport {GlobalContext} from '../contexts/GlobalState'\nimport {\n    LineChart, Line\n  } from 'recharts';\nvar data = [];\nexport const Deaths = () => {\n  const {statedata,stateentered}=useContext(GlobalContext)\n  var i=0\n  data=[...statedata].reverse().map(ele=>{\n    if(i%2===0)\n    {\n    for(var key in ele.States[stateentered].total)\n    {\n      if(key==='deceased')\n      {\n      return {pv:parseInt( ele.States[stateentered].total[key])}\n      }\n    }\n  }\n  i++\n  })\n  function datagather1()\n  {\n    for(var key in statedata[0].States[stateentered].total)\n    {\n      if(key=='deceased')\n      {\n      return parseInt( statedata[0].States[stateentered].total[key])\n      }\n    }\n  }\n  function datagather2()\n  {\n    for(var key in  statedata[1].States[stateentered].total)\n    {\n      \n      if(key=='deceased')\n      {\n      return parseInt( statedata[1].States[stateentered].total[key])\n      }\n    }\n  }\n    var newdatedeaths=datagather1()\n    var olddatedeaths=datagather2()\n    return(\n        <div id=\"Deaths\">\n          <div><h2 style={{color:'#474747'}}>Deaths</h2></div>\n          <div><h4 style={{color:'#474747'}}>↑ {(newdatedeaths-olddatedeaths).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h4></div>\n          <div><h1 style={{color:'#474747'}}>{newdatedeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h1></div>\n            <LineChart width={200} height={100} data={data}>\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" strokeWidth={2} dot={false} />\n      </LineChart>\n\n        </div>\n        \n    )\n}\n","import React,{useContext} from 'react';\nimport {GlobalContext} from '../contexts/GlobalState'\n\nimport {\n  LineChart, Line\n} from 'recharts';\n\nvar data = [];\n\nexport const Recovered = () => {\n  const {statedata,stateentered}=useContext(GlobalContext)\n  var i=0\n  data=[...statedata].reverse().map(ele=>{\n    if(i%2==0)\n    {\n    for(var key in ele.States[stateentered].total)\n    {\n      if(key=='recovered')\n      {\n      return {pv:parseInt( ele.States[stateentered].total[key])}\n      }\n    }\n  }\n  i++\n  })\n  function datagather1()\n  {\n    for(var key in  statedata[0].States[stateentered].total)\n    {\n      if(key=='recovered')\n      {\n      return parseInt( statedata[0].States[stateentered].total[key])\n      }\n    }\n  }\n  function datagather2()\n  {\n    for(var key in  statedata[1].States[stateentered].total)\n    {\n      if(key=='recovered')\n      {\n      return parseInt( statedata[1].States[stateentered].total[key])\n      }\n    }\n  }\n  var newdaterecovered=datagather1()\n  var olddaterecovered=datagather2()\n    return (\n        <div id=\"Recovered\">\n          <div><h2 style={{color:'#00821D'}}>Recovered</h2></div>\n          <div><h4 style={{color:'#00821D'}}>↑ {Math.abs(olddaterecovered-newdaterecovered).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h4></div>\n    <div><h1 style={{color:'#00821D'}}>{newdaterecovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h1></div>\n          \n            <LineChart width={200} height={100} data={data}>\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#3ab546\" strokeWidth={2} dot={false} />\n      </LineChart>\n        </div>\n    )\n}\n","import React,{useContext} from 'react';\nimport {GlobalContext} from '../contexts/GlobalState'\nimport AnimatedNumber from '@jhonnold/react-animated-number';\nimport {\n  LineChart, Line} from 'recharts';\nvar data = [\n  ]\n\nexport const Tested = (props) => {\n  const {statedata,stateentered}=useContext(GlobalContext)\n  var i=0\n  data=[...statedata].reverse().map(ele=>{\n    if(i%2==0)\n    {\n    for(var key in ele.States[stateentered].total)\n    {\n      if(key=='tested')\n      {\n      return {pv:parseInt( ele.States[stateentered].total[key])}\n      }\n    }\n  }\n  i++\n  })\n  function datagather1()\n  {\n    for(var key in statedata[0].States[stateentered].total)\n    {\n      if(key=='tested')\n      {\n      return parseInt( statedata[0].States[stateentered].total[key])\n      }\n    }\n  }\n  function datagather2()\n  {\n    for(var key in statedata[1].States[stateentered].total)\n    {\n      if(key=='tested')\n      {\n      return parseInt(statedata[1].States[stateentered].total[key])\n      }\n    }\n  }\n  var newdatetested=datagather1()\n  var olddatetested=datagather2()\n    return (\n        <div id=\"Tested\">\n          <div id=\"tested-text\"><h2 style={{color:'#A100FF'}}>Tested</h2></div>\n          <div><h4 style={{color:'#A100FF'}}>↑ {(newdatetested-olddatetested).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h4></div>\n          <div><h1  style={{color:'#A100FF'}}>{newdatetested.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h1></div>\n            <LineChart width={200} height={100} data={data}>\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#A100FF\" strokeWidth={2} dot={false} />\n      </LineChart>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { GlobalContext } from '../contexts/GlobalState'\nimport { Confirmed } from './Confirmed'\nimport { Deaths } from './Deaths'\nimport { Recovered } from './Recovered'\nimport { Tested } from './Tested'\nimport Axios from 'axios'\nimport Spinner from 'react-bootstrap/Spinner'\nexport const Graph = () => {\n    const { statedata, isbutton, GetData, stateentered, buttonclicked } = useContext(GlobalContext)\n\n    function decider() {\n        if (isbutton == true) {\n            return (\n                <div id=\"graph\">\n                    <Confirmed />\n\n                    <Deaths />\n                    <Recovered />\n                    <Tested />\n                </div>)\n        }\n        else {\n            async function getCountrydata(states) {\n                await GetData(states)\n\n            }\n\n            if (stateentered != \"Total\" && isbutton == false) getCountrydata(\"Total\")\n            if (stateentered == \"Total\") {\n                return (\n                    <div id=\"graph\">\n                        <Confirmed />\n                        <Deaths />\n                        <Recovered />\n                        <Tested />\n                    </div>)\n            }\n        }\n    }\n    return (<div>\n        {decider()}</div>)\n}\n","import React,{useContext} from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport {GlobalContext} from '../contexts/GlobalState'\nimport moment from 'moment'\nexport const Header = () => {\n    const {statedata,isbutton,GetData,stateentered,buttonclicked,Buttonclick}=useContext(GlobalContext)\nfunction decider1()\n{\n    if(stateentered!=null)\n    {\n        return(<div id=\"lastupdated\">\n                <div id=\"last_updated\"><h6>Last updated at {moment(statedata[0].createdAt).format('MMMM Do YYYY, h:mm:ss A')}\n</h6></div>\n            </div> )\n    }\n    else{\n        return(<div id=\"lastupdated\">\n        <div id=\"last_updated\"></div>\n    </div>)\n    }\n}\nfunction decider2()\n{\n    if(isbutton==true && stateentered!='Total')\n    {\n        return(<button  onClick={()=>Buttonclick('Total')}id=\"back-button\"><img id=\"back-button-img\" src=\"https://img.icons8.com/ios/50/000000/back--v1.png\"/></button>)\n    }\n}\n    return (\n        <div id=\"Header\">\n        <a href='https://dryicons.com/free-icons/arrow-icons'></a>\n<img  id=\"icon1\" src=\"https://img.icons8.com/wired/64/000000/coronavirus.png\"/>    \n<h2>Covid-19 Tracker</h2>\n       {decider1()}\n       {decider2()}\n\n        </div>\n    )\n}\n","import React,{useContext} from 'react';\nimport {GlobalContext} from '../contexts/GlobalState'\nexport const Statename = () => {\n    const{stateentered,statedata}=useContext(GlobalContext)\n    \n        if(stateentered==\"Total\")\n        {\n            return( <div id=\"stateinfo\">\n                <div id=\"statename\">\n            <div id=\"state_name\"> <h4>India</h4></div>\n            \n         </div>\n         \n         </div>)\n        }\n        else {  \n            return( <div id=\"stateinfo\">\n                <div id=\"statename\">\n           <div id=\"state_name\"> <h4>{stateentered}</h4>\n           </div>\n               </div>\n        \n                   </div>)\n        \n    }\n    \n        \n}\n","import React, { useContext } from 'react';\nimport './App.css';\nimport { GlobalProvider } from './contexts/GlobalState'\nimport { Searchbar } from './components/Searchbar'\nimport { Graph } from './components/Graph'\nimport { Header } from './components/Header'\nimport { Statename } from './components/Statename'\nfunction App() {\n\n  return (\n    <GlobalProvider>\n      <div id=\"Main-container\">\n        <Header />\n        <Searchbar />\n        <Statename />\n        <Graph />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}